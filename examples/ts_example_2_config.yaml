---
# Configuration file for Torrent Suite projection, whith ObjectPath as microcode.
# This is example of Torrent Suite projection with filtering of sample projections by name,
# and filtering output of VCF-files projections.
dialect: ObjectPath
resource_uri: 10.5.20.17
# Access data
user: ionadmin
password: 0ECu1lW

# URI of root projection on resource, this will serve as context for all lower level projections
# here we specify one experiments which was runned
root_projection_uri: 'experiment?status=run&limit=1&order_by=-id'

# Prototypes came in reverse order, firstly user must specify lower level prototypes and their anchors,
# then upper level prototypes, containing links to lower level prototypes in "children" field.

tsvc_vcf_prototype: &tsvc_vcf_prototype
  type: file
  children: None
  name:  " 'TSVC_variants.vcf' "
  uri: "join(['/auth/output/Home/', split($.context[1].filesystempath,'/')[-1], '/plugin_out/', split($.path, '/')[-1], '/', $.context[2].plan.barcodedSamples[$.context[0].name].barcodes[0], '/TSVC_variants.vcf'])"

local_settings_prototype: &local_settings_prototype
  type: file
  children: None
  name:  " 'variant_caller_settings.json' "
  uri: "join(['/auth/output/Home/', split($.context[1].filesystempath,'/')[-1], '/plugin_out/', split($.path, '/')[-1], '/local_parameters.json' ])"

bed_prototype: &bed_prototype
  type: file
  children: None
  name:  "split($.environment.store.targets_bed, '/')[-1]"
  uri: "join(['/auth/output/Home/', split($.context[1].filesystempath,'/')[-1], '/plugin_out/', split($.path, '/')[-1], '/', split($.store.targets_bed, '/')[-1]])"

plugin_result_prototype: &plugin_result_prototype
  type: directory
  children:
    bed_prototype: *bed_prototype
    local_settings_prototype: *local_settings_prototype
    tsvc_vcf_prototype: *tsvc_vcf_prototype
  name: "split($.path, '/')[-1]"
  uri: " $.context[0].pluginresults[@.pluginName is 'variantCaller' and 'VFNA' not in @.pluginName].resource_uri"

bam_prototype: &bam_prototype
  type: file
  children: None
  name:  " str($.environment.name)+'.bam' "
  uri: "join(['/auth/output/Home/', split($.context[0].filesystempath, '/')[-1], '/', $.context[1].plan.barcodedSamples[$.name].barcodes[0], '_rawlib.bam'])"

sample_metadata_prototype: &sample_metadata_prototype
  type: file
  children: None
  name:  " 'metadata.json' "
  uri: '$.resource_uri'

sample_prototype: &sample_prototype
  type: directory
  children:
    sample_metadata_prototype: *sample_metadata_prototype
    bam_prototype: *bam_prototype
    plugin_result_prototype: *plugin_result_prototype
  name: "$.name"
  uri: "$.context[0].samples.resource_uri"

result_prototype: &result_prototype
  type: directory
  children:
    sample_prototype: *sample_prototype
  name: "split($.filesystempath, '/')[-1]"
  uri: "$.results[@.filesystempath[-1] is '1'].resource_uri"

exp_plan_metadata_prototype: &exp_plan_metadata_prototype
  type: file
  children: None
  name:  " 'plannedexperiment.json' "
  uri: "$.plan.resource_uri"

exp_metadata_prototype: &exp_metadata_prototype
  type: file
  children: None
  name:  " 'metadata.json' "
  uri: "$.resource_uri"

root:
  type: directory
  children:
    exp_metadata_prototype: *exp_metadata_prototype
    exp_plan_metadata_prototype: *exp_plan_metadata_prototype
    result_prototype: *result_prototype
  name: "$.displayName"
  uri: "$.objects[@.displayName[-1] is '1'].resource_uri"
