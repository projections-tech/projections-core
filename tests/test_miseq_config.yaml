---
dialect: python
resource_uri: '//dc1/Проекты/PGSPGD'

root_projection_uri: '//dc1/Проекты/PGSPGD'

sample_sheet_projection: &sample_sheet_projection
  type: file
  children: None
  name: " content['name'] "
  uri: " [p for p in environment['children'] if fetch_context(p)['type'] == 'file'  and fetch_context(p)['extension'] == '.csv' and 'SampleSheet' in fetch_context(p)['name']] "

bam_projection: &bam_projection
  type: file
  children: None
  name: " content['name'] "
  uri: " [p for p in environment['children'] if fetch_context(p)['type'] == 'file'  and fetch_context(p)['extension'] == '.bam'] "

bai_projection: &bai_projection
  type: file
  children: None
  name: " content['name'] "
  uri: " [p for p in environment['children'] if fetch_context(p)['type'] == 'file'  and fetch_context(p)['extension'] == '.bai'] "

alignment_dir_projection: &alignment_dir_projection
  type: transparent
  children:
    bai_projection: *bai_projection
    bam_projection: *bam_projection
    sample_sheet_projection: *sample_sheet_projection
  name: " content['name'] "
  uri: " [p for p in environment['children'] if fetch_context(p)['type'] == 'dir' and 'Alignment' in fetch_context(p)['name'] ] "

base_call_dir_projection: &base_call_dir_projection
  type: transparent
  children:
    alignment_dir_projection: *alignment_dir_projection
  name: " content['name'] "
  uri: " [p for p in environment['children'] if fetch_context(p)['type'] == 'dir' and 'BaseCalls' in fetch_context(p)['name'] ] "

intensities_dir_projection: &intensities_dir_projection
  type: transparent
  children:
    base_call_dir_projection: *base_call_dir_projection
  name: " content['name'] "
  uri: " [p for p in environment['children'] if fetch_context(p)['type'] == 'dir' and 'Intensities' in fetch_context(p)['name'] ] "

data_dir_projection: &data_projection
  type: transparent
  children:
    intensities_dir_projection: *intensities_dir_projection
  name: " content['name'] "
  uri: " [p for p in environment['children'] if fetch_context(p)['type'] == 'dir' and 'Data' in fetch_context(p)['name'] ] "

run_projection: &run_projection
  type: directory
  children:
    data_projection: *data_projection
  name: " content['name'] "
  uri: " [p for p in environment['children'] if fetch_context(p)['type'] == 'dir' and 'M70294' in fetch_context(p)['name'] ] "

root:
  type: directory
  children:
    run_projection: *run_projection
  name: " content['name'] "
  uri: " [p for p in environment['children'] if fetch_context(p)['name'] == 'data'] "