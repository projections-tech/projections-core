---
dialect: python
resource_uri: mockiontorrent.com
user: ionadmin
password: ionadmin

root_projection_uri: "experiment?status=run&limit=1&order_by=-id"



plugin_result_prototype: &plugin_result_prototype
  type: directory
  children: None
  name: "split($.path, '/')[-1]"
  uri: " $.context[0].pluginresults[@.pluginName is 'variantCaller' and 'VFNA' not in @.pluginName].resource_uri"

bam_prototype: &bam_prototype
  type: file
  children: None
  name:  " str($.environment.name)+'.bam' "
  uri: "join(['/auth/output/Home/', split($.context[0].filesystempath, '/')[-1], '/', $.context[1].plan_meta.barcodedSamples[$.name].barcodes[0], '_rawlib.bam'])"

sample_metadata_prototype: &sample_metadata_prototype
  type: file
  children: None
  name:  " 'metadata.json' "
  uri: '$.resource_uri'

sample_prototype: &sample_prototype
  type: directory
  children:
    sample_metadata_prototype: *sample_metadata_prototype
    bam_prototype: *bam_prototype
    plugin_result_prototype: *plugin_result_prototype
  name: "$.name"
  uri: "$.context[0].samples.resource_uri"

# Each experiment have results of run analysis associated to it, we create dir to contain this results
result_prototype: &result_prototype
  type: directory
  children:
    sample_prototype: *sample_prototype
  name: "split($.filesystempath, '/')[1]"
  uri: "$.results"

# Each experiment have plan associated to it, so we create plan metadata prototype
exp_plan_metadata_prototype: &exp_plan_metadata_prototype
  type: file
  children: None
  name:  " 'plannedexperiment.json' "
  uri: "$.plan"

# Metadata for root projection
exp_metadata_prototype: &exp_metadata_prototype
  type: file
  children: None
  name:  " 'metadata.json' "
  uri: "$.resource_uri"

root:
  type: directory
  children:
    exp_metadata_prototype: *exp_metadata_prototype
    exp_plan_metadata_prototype: *exp_plan_metadata_prototype
    result_prototype: *result_prototype
  name: "$.displayName"
  uri: "$.objects.resource_uri"
